{"version":3,"sources":["components/Form/Form.js","components/Display/Display.js","App.js","reportWebVitals.js","index.js"],"names":["PostForm","props","state","color","subject","author","message","handleSubmit","bind","this","value","axios","post","Form","Group","controlId","Label","className","Control","type","placeholder","ref","c","as","rows","Button","variant","onClick","Component","Display","posts","interval","reloadData","setInterval","clearInterval","get","res","setState","data","map","row","Card","Body","Title","postid","Subtitle","Text","Container","Row","Col","renderData","App","force","fluid","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c12ca301.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from 'axios';\n\nimport { Form, Button } from 'react-bootstrap';\n\nclass PostForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { color: '#4cb96b' };\n        this.subject = null;\n        this.author = null;\n        this.message = null;\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    async handleSubmit() {\n        const subject = this.subject.value;\n        const author = this.author.value;\n        const message = this.message.value;\n        await axios.post('http://localhost:3001/post', { subject, author, message });\n        this.subject.value = '';\n        this.author.value = '';\n        this.message.value = '';\n    }\n\n    render() {\n        return (\n            <div>\n                <Form.Group controlId=\"formPost\">\n                    <Form.Label className=\"text-white\">Subject</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Enter post subject\" ref={(c) => this.subject = c}/>\n                    <Form.Label className=\"text-white\">Author</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Enter post author\" ref={(c) => this.author = c}/>\n                    <Form.Label className=\"text-white\">Message</Form.Label>\n                    <Form.Control as=\"textarea\" rows={3} ref={(c) => this.message = c}/>\n                </Form.Group>\n                <Button variant=\"primary\" onClick={this.handleSubmit}>\n                    Submit\n                </Button>\n            </div>\n        )\n    }\n}\n\n// Exporting the component \nexport default PostForm; ","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from 'axios';\n\nimport { Card, Container, Row, Col } from 'react-bootstrap';\n\nclass Display extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { posts: [] };\n        this.interval = null;\n    }\n\n    componentDidMount() {\n        this.reloadData();\n        this.interval = setInterval(() => {\n            this.reloadData();\n        }, 2000);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n    async reloadData() {\n        const res = await axios.get('http://localhost:3001/posts');\n        this.setState({ posts: res.data });\n    }\n\n    renderData() {\n        const rows = this.state.posts.map((row) => {\n            return (\n                <Card key={row.postid}>\n                    <Card.Body>\n                        <Card.Title>#{row.postid} - Subject: {row.subject}</Card.Title>\n                        <Card.Subtitle className=\"mb-2 text-muted\">Author: {row.author}</Card.Subtitle>\n                        <Card.Text>Message: {row.message}</Card.Text>\n                    </Card.Body>\n                </Card>\n            )\n        });\n        return rows;\n    }\n\n    render() {\n        return (\n            <Container>\n                <Row>\n                    <Col className=\"text-center mt-2 mb-1 text-white\">\n                        <h1>Posts</h1>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col className=\"text-center mb-3\">\n                        {this.renderData()}\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n}\n\n// Exporting the component \nexport default Display;\n","import React, {Component} from 'react'; \n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { Container, Row, Col } from 'react-bootstrap';\n\nimport './App.css';\n\nimport PostForm from './components/Form/Form';\nimport Display from './components/Display/Display';\n\nclass App extends Component { \n    constructor(props) {\n        super(props);\n        this.state = { force: false };\n    }\n\n    render() { \n        return (\n            <div className=\"App\">\n                <Container fluid>\n                    <Row>\n                        <Col className=\"text-center\">\n                            <h1 className=\"text-white\">Fake Twitter</h1>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col className=\"text-center\">\n                            <PostForm></PostForm>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col className=\"text-center\">\n                            <Display></Display>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        );\n    } \n} \n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n        <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}